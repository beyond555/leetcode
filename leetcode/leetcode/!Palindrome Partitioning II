import java.util.*;
/*
 * 一定要记录访问过的id到遍历完整个的最小step,记录下来进行记忆化搜索
 */
public class Solution {
	String s;
	boolean dp[][];
	int step[];
	public int get(int id)
	{
		int i,len=s.length(),t=Integer.MAX_VALUE;
		if(id==len)
		{
			step[id]=0;
			return 0;
		}
		if(id==len-1)
		{
			step[id]=1;
			return 0;
		}
		for(i=len-1;i>=id;i--)
		{
			if(dp[id][i])
			{
				if(step[i+1]==Integer.MAX_VALUE)
					get(i+1);
				t=Math.min(step[i+1],t);
			}
		}
		step[id]=t+1;
		return step[id];
	}
    public int minCut(String s) {
    	this.s=s;
    	step=new int[s.length()+1];
    	
    	int i,j,len=s.length();	
    	if(len==0)
    		return 0;
    	for(i=0;i<len+1;i++)
    	{
    		step[i]=Integer.MAX_VALUE;
    	}
    	dp=new boolean[len][len];
    	for(i=len-1;i>=0;i--)
    	{
    		for(j=len-1;j>=i;j--)
    		{
    			if(i==j)
    				dp[i][j]=true;
    			else if(j==i+1)
    				dp[i][j]=(s.charAt(i)==s.charAt(j));
    			else
    				dp[i][j]=(s.charAt(i)==s.charAt(j))&&dp[i+1][j-1];
    		}
    	}
    	get(0);
    	return step[0]-1;
    }
}
