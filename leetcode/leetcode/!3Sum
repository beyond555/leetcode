import java.util.*;
/*
 * 一开始想的是枚举前两个再二分就是n^2lgn
 * tle发现可以排序,枚举第一个i,然后从i+1往右扫描,len-1往左扫描即可
 * 复杂度即为n^2
 */
public class Solution {
	public List<List<Integer>>ans=new ArrayList<List<Integer>>();
	public int a[];
	public boolean judge(int i,int j,int k)
	{
		int s,len=ans.size();
		List<Integer>t;
		for(s=0;s<len;s++)
		{
			t=ans.get(s);
			if(t.get(0)==a[i]&&t.get(1)==a[j]&&t.get(2)==a[k])
				return true;
		}
		return false;
	}
    public List<List<Integer>> threeSum(int[] a) {
        Arrays.sort(a);
       
        this.a=a;
        int i,len=a.length,l,r,sum;
        List<Integer>t;
        for(i=0;i<len;i++)
        {
        	l=i+1;
        	r=len-1;
        	while(l<r)
        	{
        		
        		sum=a[i]+a[l]+a[r];
        		if(sum==0)
        		{
        			if(!judge(i,l,r))
        			{
        		//		System.out.println(a[i]+" "+a[l]+" "+a[r]);
        				t=new ArrayList<Integer>();
        				t.add(a[i]);
        				t.add(a[l]);
        				t.add(a[r]);
        				ans.add(t);
        			}
        			l++;
        			r--;
        		}
        		else if(sum<0)
        			l++;
        		else
        			r--;
        	}
        }
 /*       for(i=0;i<ans.size();i++)
        {
        	t=ans.get(i);
        	for(l=0;l<3;l++)
        	{
        		System.out.print(ans.get(i).get(l)+" ");
        	}
        	System.out.println();
        }*/
        return ans;
    }
}